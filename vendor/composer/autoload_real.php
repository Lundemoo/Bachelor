<?php

// autoload_real.php @generated by Composer

<<<<<<< HEAD
class ComposerAutoloaderInit734b0d4cc31c6a0ab12d417af4a11a60
=======
class ComposerAutoloaderInita7e99544b352f26b0435031b53e63ea2
>>>>>>> 7eb171af3a6fb2bf6aa3e455004ff8c9f6e99777
{
    private static $loader;

    public static function loadClassLoader($class)
    {
        if ('Composer\Autoload\ClassLoader' === $class) {
            require __DIR__ . '/ClassLoader.php';
        }
    }

    public static function getLoader()
    {
        if (null !== self::$loader) {
            return self::$loader;
        }

<<<<<<< HEAD
        spl_autoload_register(array('ComposerAutoloaderInit734b0d4cc31c6a0ab12d417af4a11a60', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInit734b0d4cc31c6a0ab12d417af4a11a60', 'loadClassLoader'));
=======
        spl_autoload_register(array('ComposerAutoloaderInita7e99544b352f26b0435031b53e63ea2', 'loadClassLoader'), true, true);
        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
        spl_autoload_unregister(array('ComposerAutoloaderInita7e99544b352f26b0435031b53e63ea2', 'loadClassLoader'));
>>>>>>> 7eb171af3a6fb2bf6aa3e455004ff8c9f6e99777

        $includePaths = require __DIR__ . '/include_paths.php';
        array_push($includePaths, get_include_path());
        set_include_path(join(PATH_SEPARATOR, $includePaths));

        $map = require __DIR__ . '/autoload_namespaces.php';
        foreach ($map as $namespace => $path) {
            $loader->set($namespace, $path);
        }

        $map = require __DIR__ . '/autoload_psr4.php';
        foreach ($map as $namespace => $path) {
            $loader->setPsr4($namespace, $path);
        }

        $classMap = require __DIR__ . '/autoload_classmap.php';
        if ($classMap) {
            $loader->addClassMap($classMap);
        }

        $loader->register(true);

        $includeFiles = require __DIR__ . '/autoload_files.php';
        foreach ($includeFiles as $file) {
<<<<<<< HEAD
            composerRequire734b0d4cc31c6a0ab12d417af4a11a60($file);
=======
            composerRequirea7e99544b352f26b0435031b53e63ea2($file);
>>>>>>> 7eb171af3a6fb2bf6aa3e455004ff8c9f6e99777
        }

        return $loader;
    }
}

<<<<<<< HEAD
function composerRequire734b0d4cc31c6a0ab12d417af4a11a60($file)
=======
function composerRequirea7e99544b352f26b0435031b53e63ea2($file)
>>>>>>> 7eb171af3a6fb2bf6aa3e455004ff8c9f6e99777
{
    require $file;
}
